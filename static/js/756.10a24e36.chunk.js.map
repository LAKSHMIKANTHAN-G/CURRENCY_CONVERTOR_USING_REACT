{"version":3,"file":"static/js/756.10a24e36.chunk.js","mappings":"q0jBAcMA,EAAG,6CAAyCC,CAAAA,SAAAA,aAAAA,WAAAA,kCAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,gCAA+B,SAoO7F,MAlOA,SAA2BC,GACvB,OAAwCC,EAAAA,EAAAA,UAAS,GAAE,eAA5CC,EAAY,KAAEC,EAAe,KACpC,GAAoDF,EAAAA,EAAAA,UAAS,GAAE,eAAxDG,EAAkB,KAAEC,EAAqB,KAChD,GAA4DJ,EAAAA,EAAAA,UAAS,KAAI,eAAlEK,EAAsB,KAAEC,EAAyB,KACxD,GAAwCN,EAAAA,EAAAA,UAAS,GAAE,eAA5CO,EAAY,KAAEC,EAAe,KACpC,GAA0DR,EAAAA,EAAAA,UAAS,GAAE,eAA9DS,EAAqB,KAAEC,EAAwB,KACtD,GAAwBV,EAAAA,EAAAA,UAAS,IAAIW,MAAO,eAA/BC,GAAF,KAAS,MACpB,GAAgCZ,EAAAA,EAAAA,WAAS,GAAM,eAAxCa,EAAS,KAAEC,EAAU,KAC5B,GAAoDd,EAAAA,EAAAA,UAAS,UAAS,eAA/De,EAAkB,KAAEC,EAAqB,KAChD,GAAoChB,EAAAA,EAAAA,WAAS,GAAM,eAA5CiB,EAAU,KAAEC,EAAa,KAQ5BC,EAAkB,GACtBC,OAAOC,KAAKC,GAAYC,KAAI,SAACC,EAAUC,GACnCN,EAAgBO,KAAK,CACjBC,MAAOL,EAAWE,GAAUI,KAC5BC,MAAM,GAAD,OAAKP,EAAWE,GAAUI,KAAI,cAAMN,EAAWE,GAAUM,MAC9DA,KAAMR,EAAWE,GAAUM,KAC3BC,OAAQT,EAAWE,GAAUO,OAC7BN,MAAOA,GAEf,IAEA,OAAwDzB,EAAAA,EAAAA,UAASmB,EAAgB,IAAG,eAA7Ea,EAAoB,KAAEC,EAAuB,KACpD,GAAoDjC,EAAAA,EAAAA,UAASmB,EAAgB,KAAI,eAA1Ee,EAAkB,KAAEC,GAAqB,MAEhDC,EAAAA,EAAAA,YAAU,WACFnB,GACAoB,IAER,GAAG,CAACL,EAAsBE,IAE1B,IAAMG,GAAgB,WAClBvB,GAAW,GACXV,EAAsB,GACtBF,EAAgB,GAChBc,EAAsB,UACrBE,GAAc,GACf,IACMoB,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OAmB1B,OAlBAC,MAAM,GAAD,OAAI7C,EAAG,YAAIoC,EAAqBL,MAAK,YAAIO,EAAmBP,MAAK,YAAIpB,GAAgB,CAAEiC,OAAAA,IACvFE,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACG,GAEH,GADAC,QAAQC,IAAI,CAAEF,KAAAA,IACM,YAAhBA,EAAKG,OAAsB,CAC3B,IAAIC,EAAiBJ,EAAKK,gBAC1BxC,EAAyBH,GACzBH,EAAsB+C,GAAY,EAAGN,EAAKO,oBAC1ClD,EAAgBiD,GAAY,EAAGF,IAC/BH,QAAQC,IAAII,GAAY,EAAGN,EAAKO,oBAChCtC,GAAW,GACXE,EAAsB,GAC1B,CAEJ,IAAGqC,OAAM,SAAAC,GACLR,QAAQC,IAAkB,eAAbO,EAAIxB,KAAyB,oBAAsB,sBAChEhB,GAAW,EACf,IACG,WACHwB,EAAWiB,OACf,CAGJ,EA4BA,SAASJ,GAAYK,EAAG7B,GACpB,OAAQ6B,EAAK7B,EAAM8B,QAAQD,GAAK7B,CACpC,CAEA,OA9BAS,EAAAA,EAAAA,YAAU,WAEN,IAAMsB,EAAUC,aAAY,WACxB/C,EAAQ,IAAID,KAChB,GAAG,KAEH,OAAO,WACHiD,cAAcF,EAClB,CACJ,GAAG,KAqBI,+BACH,iBAAKG,UAAU,kBAAiB,WAC5B,gBAAKA,UAAU,oBAAmB,UAC9B,iBAAKA,UAAU,2CAA0C,WACrD,eAAIA,UAAU,iBAAgB,iCAC9B,kBAAOA,UAAU,GAAE,8DAI3B,iBAAKA,UAAU,MAAK,UACfhD,GAAY,iBAAKgD,UAAU,oEAAoEC,GAAG,SAAQ,WACvG,SAAC,IAAU,CAACD,UAAU,UAAUE,KAAK,KAAKC,MAAM,YAAY,OAAU,IAE1E,iBAAKH,UAAS,yDAAoDhD,EAAY,SAAW,IAAK,WAC1F,iBAAKgD,UAAU,WAAU,WACrB,gBAAKA,UAAU,WAAU,UACrB,iBAAKA,UAAU,OAAM,WACjB,kBAAOA,UAAU,kDAAiD,qBAClE,gBAAKA,UAAU,OAAM,UACjB,iBAAKA,UAAU,UAAS,WACpB,gBAAKA,UAAU,oCAAmC,UAC9C,mBAAQA,UAAU,oCAAmC,SAChDxD,OAGT,gBAAKwD,UAAU,gBAAe,UAC1B,SAAC,IAAa,CACVA,UAAU,cACVC,GAAG,gBACHhC,KAAK,aACLmC,cACI,SAACtC,EAAOG,GAAI,OAAKtB,EAAgBmB,EAAM,EAE3CA,MAAOpB,iBAO/B,iBAAKsD,UAAU,gBAAe,WAC1B,kBAAOA,UAAU,kDAAiD,mBAClE,gBAAKA,UAAU,OAAM,UACjB,gBAAKA,UAAU,OAAM,UACjB,SAAC,KAAM,CACHK,SA5DX,SAACC,GACtB7D,EAA0B6D,EAAOpC,QACjCE,EAAwBkC,EAC5B,EA0DoCxC,MAAOK,EACPoC,QAASjD,YAKzB,gBAAK0C,UAAU,wEAAuE,UAClF,iBAAMQ,QA/DX,SAACF,GAChBlC,EAAwBC,GACxBC,GAAsBH,GACtB1B,EAA0B4B,EAAmBH,OACjD,EA2DmD8B,UAAU,oBAAoBC,GAAG,YAAW,UACnE,SAAC,IAAe,CACZQ,KAAMC,EAAAA,WAIlB,iBAAKV,UAAU,gBAAe,WAC1B,kBAAOA,UAAU,kDAAiD,iBAClE,gBAAKA,UAAU,OAAM,UACjB,gBAAKA,UAAU,OAAM,UACjB,SAAC,KAAM,CACHK,SAnFb,SAACM,GACpBrC,GAAsBqC,EAC1B,EAkFoC7C,MAAOO,EACPkC,QAASjD,eAM7B,iBAAK0C,UAAU,WAAU,WACrB,gBAAKA,UAAU,YAAW,UACtB,iBAAKA,UAAS,MAAQ,WAClB,gBAAKA,UAAU,YAAW,UACtB,gBAAKA,UAAS,2BAAsB9C,GAAqB,SACpDF,EAAY,IAAK,iCAAE,eAAGgD,UAAU,OAAM,WACnC,kBAAMA,UAAU,uBAAsB,UAAEpD,EAAqB,IAAGuB,EAAqBF,KAAI,SACzF,kBAAM+B,UAAU,qBAAoB,cAAG1D,EAAkB,IAAG+B,EAAmBJ,YAC/E,wBACI,kBAAM+B,UAAU,gBAAe,eAAI7B,EAAqBL,MAAK,MAAK1B,EAAY,IAAGiC,EAAmBP,mBAIpH,gBAAKkC,UAAU,YAAW,UACtB,gBAAKA,UAAU,WAAU,UACrB,gBAAKA,UAAU,gCAA+B,UAC1C,iBAAKA,UAAU,MAAK,WAChB,gBAAKA,UAAU,6BAA4B,UACvC,gBAAKA,UAAU,4BAA2B,UACtC,SAAC,IAAe,CACZS,KAAMG,EAAAA,IACNV,KAAK,KACLF,UAAU,wBAItB,gBAAKA,UAAU,YAAW,UACtB,gBAAKA,UAAU,4BAA2B,UACtC,4MAShC,gBAAKA,UAAU,sBAAqB,UAChC,mBAAQQ,QAAShC,GAAeqC,KAAK,SAASb,UAAU,gEAA+D,2BAG/H,gBAAKA,UAAU,MAAK,UAChB,gBAAKA,UAAU,YAAW,UACtB,gBAAKA,UAAU,sBAS3C,C","sources":["pages/currencyConverter/index.js"],"sourcesContent":["import React from \"react\";\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport './css/currencyConverter.css';\nimport currencies from '../../utils/seeds/commonCurrency.json';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport Select from 'react-select'\nimport CurrencyInput from 'react-currency-input-field';\n\nimport {\n    faSyncAlt, faRepeat, faRightLeft, faCircleInfo\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst URL = `https://v6.exchangerate-api.com/v6/${process.env.REACT_APP_EXCHANGE_RATE_API_KEY}/pair`;\n\nfunction currencyConverter(props) {\n    const [exchangeRate, setExchangeRate] = useState(0);\n    const [exchangeRateAmount, setExchangeRateAmount] = useState(0);\n    const [selectedCurrencySymbol, setSelectedCurrencySymbol] = useState(\"$\");\n    const [selectAmount, setSelectAmount] = useState(1);\n    const [exchangedSelectAmount, setExchangedSelectAmount] = useState(1);\n    const [date, setDate] = useState(new Date());\n    const [isLoading, setLoading] = useState(false);\n    const [reslultContaierCls, setReslultContaierCls] = useState(\"hidden\");\n    const [subscribed, setSubscribed] = useState(false);\n    \n    const options = [\n        { value: 'chocolate', label: 'Chocolate' },\n        { value: 'strawberry', label: 'Strawberry' },\n        { value: 'US', label: 'USDDD' },\n        { value: 'vanilla', label: 'Vanilla' }\n    ]\n    let cuntriesOptions = [];\n    Object.keys(currencies).map((currency, index) => {\n        cuntriesOptions.push({\n            value: currencies[currency].code,\n            label: `${currencies[currency].code} - ${currencies[currency].name}`,\n            name: currencies[currency].name,\n            symbol: currencies[currency].symbol,\n            index: index\n        })\n    });\n\n    const [selectedCurrencyFrom, setSelectedCurrencyFrom] = useState(cuntriesOptions[0]);\n    const [selectedCurrencyTo, setSelectedCurrencyTo] = useState(cuntriesOptions[48]);\n\n    useEffect(() => {\n        if( subscribed ){\n            handleConvert();\n        }\n    }, [selectedCurrencyFrom, selectedCurrencyTo]);\n\n    const handleConvert = () => {\n        setLoading(true);\n        setExchangeRateAmount(0);\n        setExchangeRate(0)\n        setReslultContaierCls('hidden');\n         setSubscribed(true)\n        let unsubscribed = false;\n        const controller = new AbortController();\n        const signal = controller.signal;\n        fetch(`${URL}/${selectedCurrencyFrom.value}/${selectedCurrencyTo.value}/${selectAmount}`, { signal })\n            .then((res) => res.json())\n            .then((data) => {\n                console.log({ data });\n                if (data.result === \"success\") {\n                    var conversionRate = data.conversion_rate\n                    setExchangedSelectAmount(selectAmount);\n                    setExchangeRateAmount(roundOffToX(2, data.conversion_result));\n                    setExchangeRate(roundOffToX(2, conversionRate))\n                    console.log(roundOffToX(2, data.conversion_result));\n                    setLoading(false);\n                    setReslultContaierCls('');\n                }\n\n            }).catch(err => {\n                console.log((err.name === \"AbortError\") ? \"request canceled!\" : \"yet to be handled.\")\n                setLoading(false);\n            });\n        return () => {\n            controller.abort();\n        }\n\n\n    }\n\n    useEffect(() => {\n\n        const inerval = setInterval(() => {\n            setDate(new Date());\n        }, 1000);\n\n        return () => {\n            clearInterval(inerval);\n        }\n    }, []);\n\n    const handleSelectTo = (_eTo) => {\n        setSelectedCurrencyTo(_eTo)\n    }\n\n    const handleSelectFrom = (_eFrom) => {\n        setSelectedCurrencySymbol(_eFrom.symbol)\n        setSelectedCurrencyFrom(_eFrom)\n    }\n\n    const handleSwap = (_eFrom) => {\n        setSelectedCurrencyFrom(selectedCurrencyTo);\n        setSelectedCurrencyTo(selectedCurrencyFrom);\n        setSelectedCurrencySymbol(selectedCurrencyTo.symbol);\n    }\n\n    function roundOffToX(x, value) {\n        return (x) ? value.toFixed(x) : value;\n    }\n\n    return <>\n        <div className=\"container-fluid\">\n            <div className=\"row headerContent\">\n                <div className=\"col-md-8 mx-auto headerTitle text-center\">\n                    <h2 className=\"text-uppercase\">Currency Converter</h2>\n                    <small className=\"\">Check live foreign currency exchange rates</small>\n                </div>\n            </div>\n\n            <div className=\"row\">\n                {isLoading ? <div className=\"d-flex mt-2 flex-column justify-content-center align-items-center\" id=\"loader\">\n                    <FadeLoader className=\"mt-auto\" size=\"20\" color=\"#1746A2\" /> </div> : ''\n                }\n                <div className={`col-md-10 col-sm-10 mx-auto currency-container ${isLoading ? 'blur-2' : ''}`}>\n                    <div className=\"row mb-4\">\n                        <div className=\"col-md-3\" >\n                            <div className=\"div1\">\n                                <label className=\"text-uppercase lbl-title font-weight-bold mb-10\">Amount</label>\n                                <div className=\"flex\">\n                                    <div className=\"row g-0\" >\n                                        <div className=\"col-md-2 d-flex align-items-right\">\n                                            <strong className=\"lbl-title currency-symbol mt-auto\">\n                                                {selectedCurrencySymbol}\n                                            </strong>\n                                        </div>\n                                        <div className=\"col-md-9 pl-0\">\n                                            <CurrencyInput\n                                                className=\"inputAmount\"\n                                                id=\"input-example\"\n                                                name=\"input-name\"\n                                                onValueChange={\n                                                    (value, name) => setSelectAmount(value)\n                                                }\n                                                value={selectAmount}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-4 pl-0\">\n                            <label className=\"text-uppercase lbl-title font-weight-bold mb-10\">From</label>\n                            <div className=\"div2\">\n                                <div className=\"flex\">\n                                    <Select\n                                        onChange={handleSelectFrom}\n                                        value={selectedCurrencyFrom}\n                                        options={cuntriesOptions}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-1 d-flex flex-column justify-content-center align-items-center\">\n                            <span onClick={handleSwap} className=\"swap-icon mt-auto\" id=\"swap-icon\">\n                                <FontAwesomeIcon\n                                    icon={faRightLeft}\n                                />\n                            </span>\n                        </div>\n                        <div className=\"col-md-4 pl-0\">\n                            <label className=\"text-uppercase lbl-title font-weight-bold mb-10\">To</label>\n                            <div className=\"div2\">\n                                <div className=\"flex\">\n                                    <Select\n                                        onChange={handleSelectTo}\n                                        value={selectedCurrencyTo}\n                                        options={cuntriesOptions}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row mb-2\">\n                        <div className=\"col-md-10\">\n                            <div className={`row`}>\n                                <div className=\"col-md-12\">\n                                    <div className={`result-container ${reslultContaierCls}`}>\n                                        {isLoading ? '' : <><p className=\"mb-0\">\n                                            <span className=\"result-currency-from\">{exchangedSelectAmount} {selectedCurrencyFrom.name} =</span>\n                                            <span className=\"result-currency-to\"> {exchangeRateAmount} {selectedCurrencyTo.name}</span>\n                                        </p><p>\n                                                <span className=\"exchange-rate\">1 {selectedCurrencyFrom.value} = {exchangeRate} {selectedCurrencyTo.value}</span>\n                                            </p></>}\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row mt-1\">\n                                        <div className=\"col-md-8 disclaimer-container\">\n                                            <div className=\"row\">\n                                                <div className=\"col-md-1 align-self-center\">\n                                                    <div className=\"disclaimer-icon-container\">\n                                                        <FontAwesomeIcon\n                                                            icon={faCircleInfo}\n                                                            size=\"2x\"\n                                                            className=\"font-awes-icon\"\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"col-md-11\">\n                                                    <div className=\"disclaimer-text-container\">\n                                                        <span>We use third party resources & the mid-market rate for our Converter. This is for informational purposes only. We don't claim this is exact exchange rate.</span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-2 text-right\">\n                            <button onClick={handleConvert} type=\"button\" className=\"btn-convert btn btn-outline-primary text-uppercase text-right\">convert</button>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-10\">\n                            <div className=\"row\">\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </>\n}\nexport default currencyConverter;\n"],"names":["URL","process","REACT_APP_EXCHANGE_RATE_API_KEY","props","useState","exchangeRate","setExchangeRate","exchangeRateAmount","setExchangeRateAmount","selectedCurrencySymbol","setSelectedCurrencySymbol","selectAmount","setSelectAmount","exchangedSelectAmount","setExchangedSelectAmount","Date","setDate","isLoading","setLoading","reslultContaierCls","setReslultContaierCls","subscribed","setSubscribed","cuntriesOptions","Object","keys","currencies","map","currency","index","push","value","code","label","name","symbol","selectedCurrencyFrom","setSelectedCurrencyFrom","selectedCurrencyTo","setSelectedCurrencyTo","useEffect","handleConvert","controller","AbortController","signal","fetch","then","res","json","data","console","log","result","conversionRate","conversion_rate","roundOffToX","conversion_result","catch","err","abort","x","toFixed","inerval","setInterval","clearInterval","className","id","size","color","onValueChange","onChange","_eFrom","options","onClick","icon","faRightLeft","_eTo","faCircleInfo","type"],"sourceRoot":""}